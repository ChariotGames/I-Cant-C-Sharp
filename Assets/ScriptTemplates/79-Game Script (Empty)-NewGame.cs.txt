using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace _Scripts.Games
{
    public class #SCRIPTNAME# : BaseGame
    {
        #region Serialized Fields
        
        #NOTRIM#

        #endregion Serialized Fields

        #region Fields
        
        #NOTRIM#

        #endregion Fields

        #region Built-Ins / MonoBehaviours

        void Start()
        {
            #NOTRIM#
        }

        void Update()
        {
            #NOTRIM#
        }

        #endregion Built-Ins / MonoBehaviours

        #region GetSets / Properties
        
        #NOTRIM#

        #endregion GetSets / Properties

        #region Game Mechanics / Methods
        
        #NOTRIM#

        public void TemplateMethod(bool param)
        {
            #NOTRIM#
        }

        #endregion Game Mechanics / Methods

        #region Overarching Methods / Helpers
        
        #NOTRIM#

        #endregion Overarching Methods / Helpers
    }

    #region Editor Overrides

    /// <summary>
    /// Please use with caution! Otherwise DELETE THE WHOLE REGION!
    /// </summary>
    [CustomEditor(typeof(#SCRIPTNAME#))]
    public class #SCRIPTNAME#Editor : Editor
    {
        SerializedProperty manager, currentDifficulty;

        bool showGameProperties = false;

        void OnEnable()
        {
            currentDifficulty = serializedObject.FindProperty("currentDifficulty");
            manager = serializedObject.FindProperty("manager");
        }

        public override void OnInspectorGUI()
        {
            serializedObject.Update();

            showGameProperties = EditorGUILayout.Foldout(showGameProperties, "Base Game Properties");
            if (showGameProperties)
            {
                EditorGUILayout.PropertyField(manager);
                EditorGUILayout.PropertyField(currentDifficulty);
            }

            serializedObject.ApplyModifiedProperties();
        }
    }

    #endregion Editor Overrides
}